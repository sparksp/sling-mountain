name: Tests
on:
  pull_request:
  push:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('yarn.lock') }}
          restore-keys: ${{ runner.os }}-node_modules
      - uses: actions/cache@v3
        with:
          path: ~/.elm
          key: ${{ runner.os }}-elm--home-${{ hashFiles('**/elm.json', 'elm-tooling.json') }}
          restore-keys: ${{ runner.os }}-elm--home
      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        env:
          NO_ELM_TOOLING_INSTALL: 1
        run: yarn install --frozen-lockfile
      - name: elm-tooling install
        run: npx --no-install elm-tooling install
      - name: Build elm
        run: npx --no-install elm make src/Main.elm --output /dev/null
      - name: Run elm-test
        run: npx --no-install elm-test

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('yarn.lock') }}
          restore-keys: ${{ runner.os }}-node_modules
      - uses: actions/cache@v3
        with:
          path: ~/.elm
          key: ${{ runner.os }}-elm--home-${{ hashFiles('**/elm.json', 'elm-tooling.json') }}
          restore-keys: ${{ runner.os }}-elm--home
      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        env:
          NO_ELM_TOOLING_INSTALL: 1
        run: yarn install --frozen-lockfile
      - name: elm-tooling install
        run: npx --no-install elm-tooling install
      - name: Run elm-review
        run: npx --no-install elm-review
      - name: Run elm-format
        run: npx --no-install elm-format --validate src/ tests/ review/src/
