name: Tests
on:
  pull_request:
  push:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Get yarn cache directory
        id: yarn-cache-dir
        run: echo "::set-output name=path::$(yarn cache dir)"
      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir.outputs.path }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - uses: actions/cache@v1
        id: elm-cache
        with:
          path: ~/.elm
          key: ${{ runner.os }}-elm--home-${{ hashFiles('**/elm.json') }}
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Add yarn bin to path
        run: echo ::add-path::$(yarn bin)
      - name: Run elm-test
        run: elm-test

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
          submodules: recursive
      - name: Get yarn cache directory
        id: yarn-cache-dir
        run: echo "::set-output name=path::$(yarn cache dir)"
      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir.outputs.path }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - uses: actions/cache@v1
        id: elm-cache
        with:
          path: ~/.elm
          key: ${{ runner.os }}-elm--home-${{ hashFiles('**/elm.json') }}
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Add yarn bin to path
        run: echo ::add-path::$(yarn bin)
      - name: Run elm-format
        run: yarn run lint:format
      - name: Run elm-review
        uses: sparksp/elm-review-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Apply elm-review fixes
        run: yes | elm-review --fix-all
        continue-on-error: true
      - name: Checkout new fixes branch
        if: ${{ github.event_name == 'pull_request' }}
        run: git checkout -b fixes/${{ github.head_ref }}
      - uses: stefanzweifel/git-auto-commit-action@v4
        if: ${{ github.event_name == 'pull_request' }}
        id: docs-commit
        with:
          branch: fixes/${{ github.head_ref }}
          file_pattern: src/
          commit_message: 'Apply elm-review fixes'
          push_options: --force
        env:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: repo-sync/pull-request@v2
        if: ${{ steps.docs-commit.outputs.changes_detected == 'true' }}
        with:
          source_branch: fixes/${{ github.head_ref }}
          destination_branch: ${{ github.head_ref }}
          pr_title: "Apply elm-review fixes"
          pr_body: "*This is an automated pull request because elm-review found problems that could be fixed automatically.*"
          pr_reviewer: sparksp
          pr_assignee: sparksp
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Validate elm-format
        uses: sparksp/elm-format-action@v1
        with:
          elm_files: |
            src/**/*.elm
            !**/Tailwind.elm
          elm_glob: true
